const qrcode = require('qrcode-terminal');
const { Client } = require('whatsapp-web.js');

const client = new Client();

// Estructura para productos
const productos = {
    pastas: ['Spaghetti Bolognesa', 'Fideos con crema', 'Lasagna'],
    carnes: ['Milanesa con papas', 'Pollo al horno', 'Bife de chorizo'],
    bebidas: ['Agua', 'Gaseosa', 'Cerveza'],
    postres: ['Flan', 'Helado', 'Chocotorta']
};

// Para almacenar pedidos por n√∫mero de usuario
const pedidos = {};

client.on('qr', qr => {
    qrcode.generate(qr, { small: true });
});

client.on('ready', () => {
    console.log('‚úÖ Bot conectado y listo');
});

client.on('message', async msg => {
    const chatId = msg.from;
    const texto = msg.body.toLowerCase();

    // Inicializar pedido si no existe
    if (!pedidos[chatId]) {
        pedidos[chatId] = {
            estado: 'inicio', // Para controlar en qu√© paso est√°
            items: []
        };
    }

    const pedido = pedidos[chatId];

    if (pedido.estado === 'inicio') {
        if (texto === 'menu') {
            pedido.estado = 'esperando_categoria';
            return msg.reply(`
üçΩ *Club House Miraflores* üçΩ

Seleccione una categor√≠a:
1Ô∏è‚É£ Pastas
2Ô∏è‚É£ Carnes
3Ô∏è‚É£ Bebidas
4Ô∏è‚É£ Postres

*Responda con el n√∫mero de la opci√≥n*
            `);
        } else {
            return msg.reply('Por favor, escrib√≠ "menu" para comenzar a pedir.');
        }
    }

    if (pedido.estado === 'esperando_categoria') {
        switch (texto) {
            case '1':
                pedido.estado = 'esperando_producto';
                pedido.categoria = 'pastas';
                return msg.reply(
                    'üçù *Pastas*:\n' +
                    productos.pastas.map((p, i) => `${i + 1}. ${p}`).join('\n') +
                    '\n\nEscrib√≠ el n√∫mero del plato que quer√©s.'
                );
            case '2':
                pedido.estado = 'esperando_producto';
                pedido.categoria = 'carnes';
                return msg.reply(
                    'ü•© *Carnes*:\n' +
                    productos.carnes.map((p, i) => `${i + 1}. ${p}`).join('\n') +
                    '\n\nEscrib√≠ el n√∫mero del plato que quer√©s.'
                );
            case '3':
                pedido.estado = 'esperando_producto';
                pedido.categoria = 'bebidas';
                return msg.reply(
                    'ü•§ *Bebidas*:\n' +
                    productos.bebidas.map((p, i) => `${i + 1}. ${p}`).join('\n') +
                    '\n\nEscrib√≠ el n√∫mero del plato que quer√©s.'
                );
            case '4':
                pedido.estado = 'esperando_producto';
                pedido.categoria = 'postres';
                return msg.reply(
                    'üç∞ *Postres*:\n' +
                    productos.postres.map((p, i) => `${i + 1}. ${p}`).join('\n') +
                    '\n\nEscrib√≠ el n√∫mero del plato que quer√©s.'
                );
            default:
                return msg.reply('Por favor, eleg√≠ una opci√≥n v√°lida (1-4).');
        }
    }

    if (pedido.estado === 'esperando_producto') {
        const categoria = pedido.categoria;
        const opciones = productos[categoria];
        const indice = parseInt(texto) - 1;

        if (indice >= 0 && indice < opciones.length) {
            const elegido = opciones[indice];
            pedido.items.push(elegido);

            pedido.estado = 'preguntar_mas';

            return msg.reply(`‚úÖ Agregaste: *${elegido}*\n¬øQuer√©s algo m√°s? (s√≠/no)`);
        } else {
            return msg.reply('Por favor, escrib√≠ un n√∫mero v√°lido del plato.');
        }
    }

    if (pedido.estado === 'preguntar_mas') {
        if (texto === 's√≠' || texto === 'si') {
            pedido.estado = 'esperando_categoria';
            return msg.reply(`
üçΩ *Club House Miraflores* üçΩ

Seleccione una categor√≠a:
1Ô∏è‚É£ Pastas
2Ô∏è‚É£ Carnes
3Ô∏è‚É£ Bebidas
4Ô∏è‚É£ Postres

*Responda con el n√∫mero de la opci√≥n*
            `);
        } else if (texto === 'no') {
            pedido.estado = 'esperando_pago';
            return msg.reply(`üí≥ ¬øC√≥mo desea pagar?\n\n1Ô∏è‚É£ Al cadete\n2Ô∏è‚É£ Por transferencia`);
        } else {
            return msg.reply('Por favor respond√© "s√≠" o "no".');
        }
    }

    if (pedido.estado === 'esperando_pago') {
        if (texto === '1' || texto === '1Ô∏è‚É£') {
            pedido.metodoPago = 'Pago al cadete';
        } else if (texto === '2' || texto === '2Ô∏è‚É£') {
            pedido.metodoPago = 'Transferencia bancaria';
        } else {
            return msg.reply('Por favor, eleg√≠ "1" o "2" para el m√©todo de pago.');
        }

        // Armar resumen del pedido
        const resumen = `üì¶ *Pedido finalizado* üì¶

*Productos:*
${pedido.items.map((item, i) => `${i + 1}. ${item}`).join('\n')}

*M√©todo de pago:* ${pedido.metodoPago}

¬°Gracias por tu compra en Club House Miraflores!`;

        // Limpiar pedido para siguiente
        pedidos[chatId] = { estado: 'inicio', items: [] };

        // Enviar resumen al cliente
        await msg.reply(resumen);

        // Opcional: enviarte el pedido a vos para cocina
        // Cambi√° este n√∫mero por tu n√∫mero de WhatsApp con c√≥digo de pa√≠s, sin signos.
        const miNumero = '5493416542022@c.us';
        await client.sendMessage(miNumero, `Nuevo pedido de ${chatId}:\n\n${resumen}`);

        return;
    }

    // Si no se entiende nada, gu√≠a
    return msg.reply('Por favor escrib√≠ "menu" para comenzar a pedir.');
});

client.initialize();
